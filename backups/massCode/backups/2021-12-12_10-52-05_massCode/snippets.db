{"name":"Управление репозиторием","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git init                                       # Создает новый проект в текущей директории.\r\ngit init путь_к_директории                     # Создает новый проект в указанной директории.\r\n\r\ngit clone адрес_репозитория                    # Клонирует удаленный репозиторий в текущую директорию.\r\ngit clone адрес_репозитория путь_к_директории  # Клонирует удаленный репозиторий в указанную директорию.\r\n\r\ngit remote -v                                  # Показывает список удалённых репозиториев, связанных с локальным.\r\ngit remote add origin url_репозитория          # Добавляет удалённый репозиторий с сокращенным именем origin, с указанным URL.\r\ngit remote rm origin                           # Удаляет привязку удалённого репозитория.\r\ngit remote show origin                         # Получает данные об удалённом репозитории с сокращенным именем origin.\r\n\r\ngit fetch origin                               # Скачивает все ветки с удаленного репозитория с сокращенным именем origin, но не сливает со своими ветками.\r\ngit fetch origin имя_ветки                     # Скачивает указанную ветку, но не сливает ее с имеющейся.\r\n\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120181673},"updatedAt":{"$$date":1638249871689},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"0Ov4ceL41lVdu4TK"}
{"name":"Прочие команды","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"powershell","value":"команда ; команда   # Осуществляет последовательное выполнение команд.\r\nкоманда && команда  # Осуществляет последовательное выполнение команд, если предыдущая была выполнена успешно.\r\nкоманда || команда  # Осуществляет последовательное выполнение команд, если предыдущая была не выполнена.\r\n\r\nfind                # Осуществляет поиск в файловой системе, файлах и папках.\r\n\r\npwd                 # Отображает текущий каталог. Сокращение от Print working directory.\r\n\r\nclear               # Очищает окно терминала от сообщений.\r\n\r\nhistory             # Отображает список команд, вводимых ранее."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638102278978},"updatedAt":{"$$date":1638447911842},"_id":"7Hxz6DxHszApe8Oo","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Terminal commands","folderId":"MsSQGFOv5","content":[{"label":"Управления файловой структурой","language":"text","value":"ls\r\n  Выводит содержимое в директории. Сокращение от List. \r\n  Пример - ls\r\nls -l\r\n  Выводит содержимое в директории в виде списка. \r\n  Пример - ls -l\r\nls -a\r\n  Выводит содержимое в директории, в том числе скрытые файлы. \r\n  Пример - ls -a\r\n\r\ncd\r\n  Переходит с текущей директории на указанную. Сокращение от Change Directory.\r\n  Пример - cd имя_директории/\r\ncd ..\r\n  Переходит в директорию на уровень выше.\r\n  Пример - cd ..\r\ncd ~\r\n  Меняет директорию на root.\r\n  Пример - cd ~\r\ncd -\r\n  Возвращает к предыдущей директории.\r\n  Пример - cd -\r\n  \r\n\r\ncat\r\n  Команда двойного назначения. Показывает на экране что содержит файл. Также помещает несколько переданных подряд файлов в один. Сокращение от Concatenate.\r\n  Пример 1 - cat имя_файла.расширение\r\n  Пример 2 - cat имя_файла_1.расширение имя_файла_2.расширение\r\n  Пример 3 - cat имя_файла_1.расширение имя_файла_2.расширение > имя_файла_3.расширение\r\n\r\nmkdir\r\n  Создаёт новую директорию. Сокращение от Make Directory.\r\n  Пример - mkdir имя_директории\r\n\r\ntouch\r\n  Создаёт пустой файл.\r\n  Пример 1 - touch имя_файла.расширение\r\n>\r\n  Создаёт пустой файл.\r\n  Пример - > имя_директории\r\n\r\necho\r\n  Выводит строку.\r\n  Пример - echo Текст touch имя_файла.расширение\r\n\r\nrm\r\n  Удаляет файлы или директории. Сокращение от Remove.\r\n  Пример - rm имя_файла.расширение\r\nrm -r\r\n  Удаляет рекурсивно директорию.\r\n  Пример - rm -r имя_директории\r\n\r\ncp\r\n  Копирование файлов. Сокращение от Copy.\r\n  Пример - cp имя_файла.расширение новое_имя_файла.расширение\r\ncp -r\r\n  Копирование директорий.\r\n  Пример - cp -r имя_директории имя_директории"}],"tags":[],"isFavorites":false,"isDeleted":true,"createdAt":{"$$date":1637858658047},"updatedAt":{"$$date":1638040421362},"_id":"8Dik0NLYjAIkuEt3","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Команды ssh-клиента","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638189141512},"updatedAt":{"$$date":1638189166392},"_id":"8upzUTOJTpjIVu2B","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Команды запущенных процессов","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"powershell","value":"ctrl + c  # Комбинация завершает выполнение любого процесса в терминале Linux.\r\nctrl + z  # Комбинация ставит любой запущенный в консоли процесс на паузу. Снова запустить его можно, введя %."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638103114713},"updatedAt":{"$$date":1638422583269},"_id":"FPZSTYo7wYsWV7sD","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индексирование и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log master                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1638989868424},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Git commands","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":true,"createdAt":{"$$date":1637862024853},"updatedAt":{"$$date":1637862032053},"_id":"GU8wvnqpJvoqLZ65","folder":{"id":"MsSQGFOv5","name":"Terminal/Console","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Управление настройками git'а","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git config --list                                 # Просматривает настройки git\r\ngit config --list --local                         # Просматривает локальные настройки git\r\ngit config --list --global                        # Просматривает глобальные настройки git\r\n\r\ngit config --local user.email название_email      # Указывает в локальных настройках имя, которая будет в описании коммита.\r\ngit config --local user.email название_email      # Указывает в локальных настройках электроную почту, которая будет в описании коммита.\r\n\r\ngit config --global user.name имя_пользователя    # Указывает в глобальных настройках имя, которым будут подписаны коммиты.\r\ngit config --global user.email название_email     # Указывает в глобальных настройках электроную почту, которая будет в описании коммита.\r\n\r\ngit config --unset --local user.name              # Удаляет имя из локальных настроек git\r\ngit config --unset --local user.email             # Удаляет имя из локальных настроек git\r\ngit config --unset --global user.name             # Удаляет имя из глобальных настроек git\r\ngit config --unset --global user.email            # Удаляет имя из глобальных настроек git\r\n\r\ngit config --global core.editor путь_к_редактору  # Устанавливает редактор кода\r\n\r\ngit config --global alies.c имя_команды           # Создание alies. Своя команда, замена более длинной команде git. "}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638108963116},"updatedAt":{"$$date":1638809444748},"_id":"HUj3ALTIBxLvvJtX","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входных параметров функции\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638347858556},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n\r\n   // Массив полей для обновления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::update(\"77\"], $data); // где 77 -  id обновляемой записи \r\n\r\n"},{"label":" Удаление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n$entity_data_class::Delete(\"77\");  // где 77 -  id удаляемой записи \r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366220569},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Команды файловой системы","folderId":"MsSQGFOv5","content":[{"label":"Управления файловой структурой","language":"powershell","value":"whoami                                       # Выводит список пользователей. Сокращение от Who am I.\r\nsu -l имя_пользователя                       # Авторизация под указанным пользователем. Сокращение от Switch user.\r\n\r\nls                                           # Выводит содержимое в директории. Сокращение от List. \r\nls -l                                        # Выводит содержимое в директории в виде списка.\r\nls -a                                        # Выводит содержимое в директории, в том числе скрытые файлы.\r\n\r\ncd имя_директории/                           # Переходит с текущей директории на указанную. Сокращение от Change Directory.\r\ncd ..                                        # Переходит в директорию на уровень выше.\r\ncd ~                                         # Меняет директорию на root.\r\ncd -                                         # Возвращает к предыдущей директории.\r\n  \r\ncat имя_файла                                # Команда двойного назначения. Показывает на экране что содержит файл. Сокращение от Concatenate.\r\n\r\nmkdir имя_директории/                        # Создаёт новую директорию. Сокращение от Make Directory.\r\n\r\ntouch имя_файла                              # Создаёт пустой файл.\r\n> имя_файла                                  # Создаёт пустой файл.\r\n\r\necho Текст touch имя_файла                   # Выводит строку.\r\n\r\ncp имя_файла новое_имя_файла                 # Копирование файлов. Сокращение от Copy.\r\ncp -r имя_директории/ новое_имя_директории/  # Копирование директорий.\r\n\r\nmv имя_файла новое_имя_файла                 # Перемещение файлов. Сокращение от Move.\r\nmv -r имя_директории/ новое_имя_директории/  # Перемещение директорий.\r\n\r\nrm имя_файла                                 # Удаляет файлы или директории. Сокращение от Remove.\r\nrm -r имя_директории/                        # Удаляет рекурсивно директорию.\r\n  \r\nln путь_к_файлу необязательное_имя_файла     # Создаёт программные ссылки на файлы. Сокращение от Link.\r\n\r\nunzip                                        # "}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638040447663},"updatedAt":{"$$date":1638423474955},"folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"Wxm6Cdn2jZdwjGSz"}
{"name":"Создание заказа - Creating order","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340828070},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Управление ветками","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit push origin имя_ветки                          # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку.\r\ngit push -u origin имя_ветки                       # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку, и делает ее отслеживаемой с указанной удаленной веткой.\r\ngit push origin :старое_имя_ветки новое_имя_ветки  # Переименовывает указанную старую ветку в удаленном репозитории.\r\n\r\ngit pull origin                                    # Вливает изменения со всех веток с удалённого репозитория.\r\ngit pull origin имя_ветки                          # Вливает изменения с указанной ветки с удалённого репозитория.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1638993532466},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Untitled snippet","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064986781},"_id":"ZfMX09KlbHz3SN6R"}
{"name":"У","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064986848},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Упра","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064989883},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Управле","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064990500},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064991200},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Удален","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064992008},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Удаленный ","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064993668},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Удаленный репо","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064994606},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Удаленный репоз","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064995474},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Удаленный репозиторий","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639064995986},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Управление ветками","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\n\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639065005017},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Удаленный репозиторий","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"text","value":"git push origin имя_ветки                          # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку.\r\ngit push -u origin имя_ветки                       # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку, и делает ее отслеживаемой с указанной удаленной веткой.\r\ngit push origin :старое_имя_ветки новое_имя_ветки  # Переименовывает указанную старую ветку в удаленном репозитории.\r\n\r\ngit pull origin                                    # Вливает изменения со всех веток с удалённого репозитория.\r\ngit pull origin имя_ветки                          # Вливает изменения с указанной ветки с удалённого репозитория."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639065013416},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Удаленный репозиторий","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git push origin имя_ветки                          # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку.\r\ngit push -u origin имя_ветки                       # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку, и делает ее отслеживаемой с указанной удаленной веткой.\r\ngit push origin :старое_имя_ветки новое_имя_ветки  # Переименовывает указанную старую ветку в удаленном репозитории.\r\n\r\ngit pull origin                                    # Вливает изменения со всех веток с удалённого репозитория.\r\ngit pull origin имя_ветки                          # Вливает изменения с указанной ветки с удалённого репозитория."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639065014777},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Управление ветками","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639065036001},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Управление ветками","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639065038137},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"УправлениУдаленный репозиторий","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git push origin имя_ветки                          # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку.\r\ngit push -u origin имя_ветки                       # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку, и делает ее отслеживаемой с указанной удаленной веткой.\r\ngit push origin :старое_имя_ветки новое_имя_ветки  # Переименовывает указанную старую ветку в удаленном репозитории.\r\n\r\ngit pull origin                                    # Вливает изменения со всех веток с удалённого репозитория.\r\ngit pull origin имя_ветки                          # Вливает изменения с указанной ветки с удалённого репозитория."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639065046641},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Управлениие Удаленный репозиторий","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git push origin имя_ветки                          # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку.\r\ngit push -u origin имя_ветки                       # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку, и делает ее отслеживаемой с указанной удаленной веткой.\r\ngit push origin :старое_имя_ветки новое_имя_ветки  # Переименовывает указанную старую ветку в удаленном репозитории.\r\n\r\ngit pull origin                                    # Вливает изменения со всех веток с удалённого репозитория.\r\ngit pull origin имя_ветки                          # Вливает изменения с указанной ветки с удалённого репозитория."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639065053250},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Удаленный репозиторий","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git push origin имя_ветки                          # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку.\r\ngit push -u origin имя_ветки                       # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку, и делает ее отслеживаемой с указанной удаленной веткой.\r\ngit push origin :старое_имя_ветки новое_имя_ветки  # Переименовывает указанную старую ветку в удаленном репозитории.\r\n\r\ngit pull origin                                    # Вливает изменения со всех веток с удалённого репозитория.\r\ngit pull origin имя_ветки                          # Вливает изменения с указанной ветки с удалённого репозитория."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1639064986781},"updatedAt":{"$$date":1639065054196},"_id":"ZfMX09KlbHz3SN6R","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Вет","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639065058111},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639065066929},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ин","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log master                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065069763},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log master                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065080463},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log master                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065081425},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log master                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065084662},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\n\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639065113891},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639065116634},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log им                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065202017},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log и                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065409069},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                      # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065410303},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                           # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065410668},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065412750},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в те ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065413092},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в теку ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065417840},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065418570},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей вет ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065419402},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ве ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065420565},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065421200},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065421865},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log имя                            # Показывает коммиты в текущей ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065425479},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log имя_                            # Показывает коммиты в текущей ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065427659},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                            # Показывает коммиты в текущей ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065428923},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                  # Показывает коммиты в текущей ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065429793},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065432317},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639065437501},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log    \r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\n                        # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066552912},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log    \r\n                        # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066553942},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066557151},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\n\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066558587},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066562182},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066563861},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066565815},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке внесенную ими разницу на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066567678},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке b внесенную ими разницу на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066578664},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке  внесенную ими разницу на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066580935},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенную ими разницу на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066584159},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенну на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066584531},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесеннst  на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066923685},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенн на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066924624},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные  на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066925339},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные и на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066926490},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения на уровне строк.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066926814},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения .\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066928409},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066943134},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066943535},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066954640},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066955750},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066956966},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                        # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066963838},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066966600},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки              пше  # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066968297},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки              пше # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066970542},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066971707},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639066994883},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -yjvth                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067008047},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -y                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067009842},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067011111},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -кол                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067012814},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество                          # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067014217},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067016705},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067017141},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов                        # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067018906},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067019827},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает упоследние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067021872},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанныепоследние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067026922},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанные последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067028347},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанн последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067029266},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067034047},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних  2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067036043},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних ко 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067043938},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067044982},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067046358},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067049154},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067049478},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067049832},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067050419},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067052737},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в теку.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067053435},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в текуще.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067055075},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067055658},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067057178},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat                  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067067609},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat                 # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067090977},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat# Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067092725},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов       # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067094257},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов        # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067095446},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067096063},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067096899},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                  # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067097498},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                         # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067098075},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                            # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067099022},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                         # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067099738},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067100355},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067101384},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067102574},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067103842},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n \r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067104372},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n \r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067104718},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n \r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067105610},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n \r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067106348},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n \r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067107050},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067107688},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067109340},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.git log имя_ветки                    # Показывает коммиты в указанной ветке.\r\n\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067149388},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\n\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067151405},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p HEAD~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067152118},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p @~                     # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067154061},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p @~                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067171863},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p [@~]                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067174578},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p [ti]                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067204127},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p [ti_]                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067205899},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p [ti_r]                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067206441},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p [ti_ro]                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067207236},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p [ti_rovvbnf]                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067207551},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p []                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067208687},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p                         # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067210607},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p                        # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067210971},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p хеш                       # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067211689},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p хеш_                       # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067213316},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p хеш_к                       # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067213903},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p хеш_коммита                       # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067214301},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p хеш_коммита                      # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067215780},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p хеш_коммита            # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067217225},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\ngit log -p хеш_коммита               # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067218023},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639067219034},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068523711},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p имя_ветки                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммит на указанное колличество коммитов назад.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068526472},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммит на указанное колличество коммитов назад.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068529222},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log имя_ветки                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068535809},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                    # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068536648},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                   # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068541055},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита                 # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068543019},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита                # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068543742},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068544408},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в ука ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068544756},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068554848},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном ко ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068556199},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном комми ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068557249},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068557844},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или в ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068559248},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанной ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068560170},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -количество_коммитов --stat  # Показывает указанное количество последних коммитов в текущей ветке и статистику внесенных ими изменений.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068561703},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068572472},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068698708},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068708288},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068710523},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068711945},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit git  -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068727823},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit git -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068788763},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit log -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068791006},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit sh -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068822304},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit show -p                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068824418},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit showp                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068824863},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit log -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068826297},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show -p хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068826717},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show  хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068831039},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068832708},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.git \r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068833300},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.g\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068835165},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов         # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068837282},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов# Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068837596},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита                  # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068842349},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита            # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068843193},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                              # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита            # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068845404},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                        # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068845709},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                           # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068847298},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                           # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068847633},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита               # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068850119},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                             # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068851792},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                            # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068853165},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                       # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068853772},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                   # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068854568},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                  # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068854919},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла            # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                        # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки              # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068855583},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла            # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                 # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки       # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                            # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068856592},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла            # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                 # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки       # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                     # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                    # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068859749},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла            # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                 # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки       # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                     # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла             # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                           # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068861256},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммиты в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла            # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                 # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки       # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                     # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла             # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                    # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068863207},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индекс и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                    # Показывает состояния репозитория.\r\n\r\ngit log                       # Показывает коммиты в текущей ветке.\r\ngit log хеш_коммита           # Показывает коммиты в указанном коммите или ветке.\r\ngit log -количество_коммитов  # Показывает указанное количество последних коммитов в текущей ветке.\r\n\r\ngit show                      # Показывает коммиты в текущей ветке и внесенные изменения.\r\ngit show хеш_коммита          # Показывает коммит в указанном коммите или ветке и внесенные изменения.\r\n\r\ngit diff                      # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла            # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                 # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки       # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                     # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла             # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                    # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Удаляет изменения из индекса, изменения в рабочей директории остаются.\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\n\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1639068864937},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069160804},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f                              # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069325066},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f ORI                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069335482},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f ORIG                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069337441},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f ORIG_                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069337972},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f ORIG_H                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069339346},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f ORIG_HE                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069339955},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f ORIG_HEAD                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069340359},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\ngit branch -f ORIG_HEAD                            # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069341082},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069343208},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Показывает ветки, не слитые с активной.\r\n\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069448449},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Показывает ветки, не слитые с активной.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069451652},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069453071},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на gt коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069463422},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на ghtlsleobq коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069469029},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на  коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069471598},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предды коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069472302},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на преды коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069473921},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыд коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069474739},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыду коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069475323},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущ коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069475653},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, и создает ее, если ее нет.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069476955},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069477601},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после сли.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069487505},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после слия.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069488438},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после слияния.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069489098},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после слияни.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069489834},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после .\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069491300},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после vt.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069491679},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после vtr.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069492852},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после vtrge.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069493264},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после .\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069493945},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после me.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069494787},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после merge.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069495852},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f имяORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после merge.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069496549},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f имя_ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после merge.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069505345},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f имя_ветки ORIG_HEAD                            # Перемещает ветку на предыдущий коммит, после merge.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069506489},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f имя_ветки ORIG_HEAD                           # Перемещает ветку на предыдущий коммит, после merge.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069507740},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Ветки","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch -D имя_ветки                            # Принудительно удаляет ветку, с не сохранеными изменениями.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -m новое_имя_ветки                      # Переименовывает текущую локальную ветку.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch --f имя_ветки хэш_коммита               # Перемещает ветку на указанный коммит, и создает ее, если ее нет.\r\ngit branch -f имя_ветки ORIG_HEAD                  # Перемещает ветку на предыдущий коммит, после merge.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\ngit checkout -B имя_ветки хеш_коммита              # Создает новую ветку с указанным именем и встает на неё. Если такая ветка существует, то передвинет ее на указанный коммит.\r\ngit checkout имя_файла                             # Достает состояния файла в рабочую директорию из индекса.\r\ngit checkout хеш_коммита имя_файла                 # Достает состояния файла из указанного коммита в рабочую директорию и индекс.\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1639069510441},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
