{"name":"Управление репозиторием","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git init                                       # Создает новый проект в текущей директории.\r\ngit init путь_к_директории                     # Создает новый проект в указанной директории.\r\n\r\ngit clone адрес_репозитория                    # Клонирует удаленный репозиторий в текущую директорию.\r\ngit clone адрес_репозитория путь_к_директории  # Клонирует удаленный репозиторий в указанную директорию.\r\n\r\ngit remote -v                                  # Показывает список удалённых репозиториев, связанных с локальным.\r\ngit remote add origin url_репозитория          # Добавляет удалённый репозиторий с сокращенным именем origin, с указанным URL.\r\ngit remote rm origin                           # Удаляет привязку удалённого репозитория.\r\ngit remote show origin                         # Получает данные об удалённом репозитории с сокращенным именем origin.\r\n\r\ngit fetch origin                               # Скачивает все ветки с удаленного репозитория с сокращенным именем origin, но не сливает со своими ветками.\r\ngit fetch origin имя_ветки                     # Скачивает указанную ветку, но не сливает ее с имеющейся.\r\n\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120181673},"updatedAt":{"$$date":1638249871689},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"0Ov4ceL41lVdu4TK"}
{"name":"Навигационные команды","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"powershell","value":"find     # Осуществляет поиск в файловой системе, файлах и папках.\r\n\r\npwd      # Отображает текущий каталог. Сокращение от Print working directory.\r\n\r\nclear    # Команда полной очистки окна терминала удаляет все ранее выведенные сообщения.\r\n\r\nhistory  # Команда полной очистки окна терминала удаляет все ранее выведенные сообщения."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638102278978},"updatedAt":{"$$date":1638249910480},"_id":"7Hxz6DxHszApe8Oo","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Terminal commands","folderId":"MsSQGFOv5","content":[{"label":"Управления файловой структурой","language":"text","value":"ls\r\n  Выводит содержимое в директории. Сокращение от List. \r\n  Пример - ls\r\nls -l\r\n  Выводит содержимое в директории в виде списка. \r\n  Пример - ls -l\r\nls -a\r\n  Выводит содержимое в директории, в том числе скрытые файлы. \r\n  Пример - ls -a\r\n\r\ncd\r\n  Переходит с текущей директории на указанную. Сокращение от Change Directory.\r\n  Пример - cd имя_директории/\r\ncd ..\r\n  Переходит в директорию на уровень выше.\r\n  Пример - cd ..\r\ncd ~\r\n  Меняет директорию на root.\r\n  Пример - cd ~\r\ncd -\r\n  Возвращает к предыдущей директории.\r\n  Пример - cd -\r\n  \r\n\r\ncat\r\n  Команда двойного назначения. Показывает на экране что содержит файл. Также помещает несколько переданных подряд файлов в один. Сокращение от Concatenate.\r\n  Пример 1 - cat имя_файла.расширение\r\n  Пример 2 - cat имя_файла_1.расширение имя_файла_2.расширение\r\n  Пример 3 - cat имя_файла_1.расширение имя_файла_2.расширение > имя_файла_3.расширение\r\n\r\nmkdir\r\n  Создаёт новую директорию. Сокращение от Make Directory.\r\n  Пример - mkdir имя_директории\r\n\r\ntouch\r\n  Создаёт пустой файл.\r\n  Пример 1 - touch имя_файла.расширение\r\n>\r\n  Создаёт пустой файл.\r\n  Пример - > имя_директории\r\n\r\necho\r\n  Выводит строку.\r\n  Пример - echo Текст touch имя_файла.расширение\r\n\r\nrm\r\n  Удаляет файлы или директории. Сокращение от Remove.\r\n  Пример - rm имя_файла.расширение\r\nrm -r\r\n  Удаляет рекурсивно директорию.\r\n  Пример - rm -r имя_директории\r\n\r\ncp\r\n  Копирование файлов. Сокращение от Copy.\r\n  Пример - cp имя_файла.расширение новое_имя_файла.расширение\r\ncp -r\r\n  Копирование директорий.\r\n  Пример - cp -r имя_директории имя_директории"}],"tags":[],"isFavorites":false,"isDeleted":true,"createdAt":{"$$date":1637858658047},"updatedAt":{"$$date":1638040421362},"_id":"8Dik0NLYjAIkuEt3","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Команды ssh-клиента","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638189141512},"updatedAt":{"$$date":1638189166392},"_id":"8upzUTOJTpjIVu2B","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Команды запущенных процессов","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"powershell","value":"ctrl + C  # Комбинация завершает выполнение любого процесса в терминале Linux.\r\nctrl + z  # Комбинация ставит любой запущенный в консоли процесс на паузу. Снова запустить его можно, введя %."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638103114713},"updatedAt":{"$$date":1638249896185},"_id":"FPZSTYo7wYsWV7sD","folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Индексирование и коммиты","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git status                        # Показывает состояния репозитория.\r\n\r\ngit log master                     # Показывает коммиты в указанной ветке.\r\ngit log -2                         # Показывает последние 2 коммита в активной ветке.\r\ngit log -2 --stat                  # Показывает последние 2 коммита и статистику внесенных ими изменений.\r\ngit log -p -2                      # Показывает последние 2 коммита и внесенную ими разницу на уровне строк.\r\ngit log -p HEAD~                   # Показывает коммит на указанное колличество коммитов назад.\r\n\r\ngit diff                           # Сравнивает индекс с рабочей директорией.\r\ngit diff имя_файла                 # Сравнивает файл из рабочей директории и индекс.\r\ngit diff HEAD                      # Сравнивает рабочую директорию и коммит, на который указывает HEAD.\r\ngit diff main имя_ветки            # Показывает что сделано в указанной ветке по сравнению с веткой master.\r\n\r\ngit add .                          # Добавляет в индекс все новые, изменённые, удалённые файлы из текущей директории и её поддиректорий.\r\ngit add имя_файла                  # Добавляет в индекс указанный изменненый, удаленный или новый файл.\r\ngit add -i                         # Запускает интерактивную оболочку для добавления в индекс только выбранных файлов.\r\n\r\ngit commit -m \"сообщение\"          # Фиксирует в коммите проиндексированные изменения и добавляет сообщение.\r\ngit commit -a -m \"сообщение\"       # Индексирует отслеживаемые файлы, фиксируя их в коммите изменения, добавляет сообщение.\r\ngit commit --amend -m \"сообщение\"  # Заменяет последний коммит новым коммитом и сообщением. \r\n\r\ngit reset                          # Антипод git add .\r\ngit reset имя_файла                # Антипод git add имя_файла.\r\ngit reset @~                       # Передвигает HEAD на указынное количество коммитов назад, рабочая директория остается без изменений, индекс принимает состояние предыдущего коммита.\r\ngit reset --keep @~                # Передвигает HEAD на указынное количество коммитов назад, сбрасывает индекс, но в рабочей директории оставляет изменение, если файл с изменениями между коммитами менялся, переключение не произойдёт.\r\ngit reset --hard                   # Отменяет изменения в проиндексированных файлах, возвращая их в состояние коммита на котором стоит HEAD. Неотслеживаемые файлы останутся на месте.\r\ngit reset --soft @~                # Передвигает HEAD на указынное количество коммитов назад, но в рабочей директории и индексе оставляет все изменения\r\n\r\ngit clean -df                      # Удаляет неотслеживаемые файлы и директории\r\n\r\ngit checkout имя_файла             # Отменяет изменения в файле, возвращая его в исходное состояние последнего коммита.\r\ngit checkout -f                    # Принудительно отменяет изменения файлов и переходит на последний коммит.\r\ngit checkout -f имя_файла          # Принудительно отменяет изменения в файле и переходит на его состояние на поледнем коммите.\r\n\r\ngit revert HEAD --no-edit          # Создает новый коммит, отменяющий изменения последнего коммита без запуска редактора сообщения.\r\ngit revert хеш_коммита --no-edit   # Создает новый коммит, отменяющий изменения, внесённые коммитом с указанным хешем.\r\n\r\ngit tag v1.0.0                     # Создает тег с указанным именем на коммите, на который указывает HEAD\r\ngit tag -d v1.0.0                  # Удаляет тег с указанным именем\r\ngit tag -n                         # Показывает все теги, и по 1 строке сообщения коммитов, на которые они указывают"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120143442},"updatedAt":{"$$date":1638249876129},"_id":"FfJZX9kRHFMx1sli","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Git commands","folderId":"MsSQGFOv5","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":true,"createdAt":{"$$date":1637862024853},"updatedAt":{"$$date":1637862032053},"_id":"GU8wvnqpJvoqLZ65","folder":{"id":"MsSQGFOv5","name":"Terminal/Console","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"Управление настройками git'а","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git config --global user.name имя_пользователя  # Указывает имя, которым будут подписаны коммиты.\r\ngit config --global user.email название_email   # Указывает электроную почту, которая будет в описании коммита."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638108963116},"updatedAt":{"$$date":1638249868539},"_id":"HUj3ALTIBxLvvJtX","folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638108905561},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Команды файловой системы","folderId":"MsSQGFOv5","content":[{"label":"Управления файловой структурой","language":"powershell","value":"whoami                                       # Выводит список пользователей. Сокращение от Who am I.\r\nsu -l имя_пользователя                       # Авторизация под указанным пользователем. Сокращение от Switch user.\r\n\r\nls                                           # Выводит содержимое в директории. Сокращение от List. \r\nls -l                                        # Выводит содержимое в директории в виде списка.\r\nls -a                                        # Выводит содержимое в директории, в том числе скрытые файлы.\r\n\r\ncd имя_директории/                           # Переходит с текущей директории на указанную. Сокращение от Change Directory.\r\ncd ..                                        # Переходит в директорию на уровень выше.\r\ncd ~                                         # Меняет директорию на root.\r\ncd -                                         # Возвращает к предыдущей директории.\r\n  \r\ncat имя_файла                                # Команда двойного назначения. Показывает на экране что содержит файл. Сокращение от Concatenate.\r\n\r\nmkdir имя_директории/                        # Создаёт новую директорию. Сокращение от Make Directory.\r\n\r\ntouch имя_файла                              # Создаёт пустой файл.\r\n> имя_директории                             # Создаёт пустой файл.\r\n\r\necho Текст touch имя_файла                   # Выводит строку.\r\n\r\ncp имя_файла новое_имя_файла                 # Копирование файлов. Сокращение от Copy.\r\ncp -r имя_директории/ новое_имя_директории/  # Копирование директорий.\r\n\r\nmv имя_файла новое_имя_файла                 # Перемещение файлов. Сокращение от Move.\r\nmv -r имя_директории/ новое_имя_директории/  # Перемещение директорий.\r\n\r\nrm имя_файла                                 # Удаляет файлы или директории. Сокращение от Remove.\r\nrm -r имя_директории/                        # Удаляет рекурсивно директорию.\r\n  \r\nln путь_к_файлу необязательное_имя_файла     # Создаёт программные ссылки на файлы. Сокращение от Link."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638040447663},"updatedAt":{"$$date":1638280128255},"folder":{"id":"MsSQGFOv5","name":"Terminal commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"Wxm6Cdn2jZdwjGSz"}
{"name":"creating_order","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1637833389073},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Управление ветками","folderId":"ov1CCDtKz","content":[{"label":"Fragment 1","language":"powershell","value":"git branch                                         # Показывает список веток.\r\ngit branch -a                                      # Показывает все имеющиеся ветки в т.ч. на удаленных репозиториях.\r\ngit branch -v                                      # Показывает список веток и последний коммит в каждой.\r\ngit branch -d имя_ветки                            # Удаляет ветку.\r\ngit branch имя_ветки                               # Создает новую ветку с указанным именем на текущем коммите.\r\ngit branch -m старое_имя_ветки новое_имя_ветки     # Переименовывает указанную старую ветку в локальном репозитории.\r\ngit branch -m new_branch_name                      # Переименовывает текущую локальную ветку.\r\ngit branch --merged                                # Показывает ветки, уже слитые с активной.\r\ngit branch --no-merged                             # Показывает ветки, не слитые с активной.\r\n\r\ngit push origin имя_ветки                          # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку.\r\ngit push -u origin имя_ветки                       # Отправляет в удалённый репозиторий с сокращенным именем origin указанную ветку, и делает ее отслеживаемой с указанной удаленной веткой.\r\ngit push origin :старое_имя_ветки новое_имя_ветки  # Переименовывает указанную старую ветку в удаленном репозитории.\r\n\r\ngit pull origin                                    # Вливает изменения со всех веток с удалённого репозитория.\r\ngit pull origin имя_ветки                          # Вливает изменения с указанной ветки с удалённого репозитория.\r\ngit checkout имя_ветки                             # Встает на указанную ветку.\r\ngit checkout -b имя_ветки                          # Создает новую ветку с указанным именем и встает на неё.\r\n\r\ngit merge имя_ветки                                # Влить в ветку, в которой находимся, данные из указанной ветки.\r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638120221890},"updatedAt":{"$$date":1638249845724},"folder":{"id":"ov1CCDtKz","name":"Git commands","open":false,"defaultLanguage":"text"},"tagsPopulated":[],"_id":"vkzdnGOvJrsZcjBA"}
{"name":"Со","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340794209},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание ","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340802044},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340803615},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - ","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340804910},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Ску","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340812988},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - ","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340815222},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Cre","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340816007},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Crea","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340816801},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating ","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340817255},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340818605},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating_","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340819329},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating_o","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340819754},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating_or","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340820938},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating_order","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340821363},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - ","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340822310},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creat","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340825468},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating ","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340827107},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Создание заказа - Creating order","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637132070568},"updatedAt":{"$$date":1638340828070},"_id":"uRoAIlNlmyfN4yNA","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638342280722},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n@name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343008224},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343009286},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343012740},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n/@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343013239},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343753065},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n<?\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343753709},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343755519},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n.\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343756500},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343758164},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343759100},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/*\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343759611},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/*\r\n\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343763650},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/*\r\n*\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343764961},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343767090},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n@author Steelmoorg                                       # Имя автора кода.\r\n@category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n@deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n@example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n@final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n@global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n@ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n@internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n@license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n@link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n@method returntype описание                              # Используется для описания магического метода __call().\r\n@name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n@package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n@param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n@return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n@see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n@since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n@subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n@todo Something                                          # Можно описать будущие возможные изменения кода.\r\n@throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n@var string                                              # Указывает тип свойства класса.\r\n@version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343776762},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/**\r\n * @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n@deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n@example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n@final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n@global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n@ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n@internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n@license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n@link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n@method returntype описание                              # Используется для описания магического метода __call().\r\n@name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n@package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n@param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n@return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n@see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n@since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n@subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n@todo Something                                          # Можно описать будущие возможные изменения кода.\r\n@throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n@var string                                              # Указывает тип свойства класса.\r\n@version Version 1.1                                     # Текущая версия реализации документируемого кода.\r\n */\r\n@author Steelmoorg                                       # Имя автора кода.\r\n@category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n@deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n@example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n@final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n@global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n@ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n@internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n@license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n@link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n@method returntype описание                              # Используется для описания магического метода __call().\r\n@name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n@package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n@param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n@return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n@see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n@since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n@subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n@todo Something                                          # Можно описать будущие возможные изменения кода.\r\n@throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n@var string                                              # Указывает тип свойства класса.\r\n@version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343798706},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n@author Steelmoorg                                       # Имя автора кода.\r\n@category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n@deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n@example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n@final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n@global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n@ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n@internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n@license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n@link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n@method returntype описание                              # Используется для описания магического метода __call().\r\n@name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n@package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n@param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n@return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n@see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n@since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n@subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n@todo Something                                          # Можно описать будущие возможные изменения кода.\r\n@throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n@var string                                              # Указывает тип свойства класса.\r\n@version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343807222},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343815381},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/*\r\n*\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343815818},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343817329},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n/*\r\n*\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343820080},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343821325},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n//@author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343822867},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343825665},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n     * Логирование в HL-блок\r\n     * @author Steelmoorg\r\n     * @param string $type Запрос к Yandexmarket\r\n     * @param string $datetime 11.11.2021 14:39:24\r\n     * @param integer $bxID ID заказа на сайте\r\n     * @param integer $yaID ID заказа на маркетплейсе\r\n     * @param string $bxStatus Статус заказа битрикса\r\n     * @param string $yaStatus Статус заказа маркета\r\n     * @param string $description Описание заказа\r\n     * @return void\r\n     */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343826503},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n    * Логирование в HL-блок\r\n    * @author Steelmoorg\r\n    * @param string $type Запрос к Yandexmarket\r\n    * @param string $datetime 11.11.2021 14:39:24\r\n    * @param integer $bxID ID заказа на сайте\r\n    * @param integer $yaID ID заказа на маркетплейсе\r\n    * @param string $bxStatus Статус заказа битрикса\r\n    * @param string $yaStatus Статус заказа маркета\r\n    * @param string $description Описание заказа\r\n    * @return void\r\n    */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343857232},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * Логирование в HL-блок\r\n  * @author Steelmoorg\r\n  * @param string $type Запрос к Yandexmarket\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343864033},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n* Логирование в HL-блок\r\n* @author Steelmoorg\r\n* @param string $type Запрос к Yandexmarket\r\n* @param string $datetime 11.11.2021 14:39:24\r\n* @param integer $bxID ID заказа на сайте\r\n* @param integer $yaID ID заказа на маркетплейсе\r\n* @param string $bxStatus Статус заказа битрикса\r\n* @param string $yaStatus Статус заказа маркета\r\n* @param string $description Описание заказа\r\n* @return void\r\n*/"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343864404},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * Логирование в HL-блок\r\n  * @author Steelmoorg\r\n  * @param string $type Запрос к Yandexmarket\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343866157},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n ToDo: Указать что нужно позже сделать сделать \r\n  * Логирование в HL-блок\r\n  * @author Steelmoorg\r\n  * @param string $type Запрос к Yandexmarket\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343868201},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  ToDo: Указать что нужно позже сделать сделать \r\n  * Логирование в HL-блок\r\n  * @author Steelmoorg\r\n  * @param string $type Запрос к Yandexmarket\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343875343},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  *ToDo: Указать что нужно позже сделать сделать \r\n  * Логирование в HL-блок\r\n  * @author Steelmoorg\r\n  * @param string $type Запрос к Yandexmarket\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343877208},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Логирование в HL-блок\r\n  * @author Steelmoorg\r\n  * @param string $type Запрос к Yandexmarket\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343878797},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $type Запрос к Yandexmarket\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343879571},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * \r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343885052},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $datetime 11.11.2021 14:39:24\r\n  * @param integer $bxID ID заказа на сайте\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343899210},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param integer $yaID ID заказа на маркетплейсе\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343903252},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $bxStatus Статус заказа битрикса\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343904809},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $yaStatus Статус заказа маркета\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343905353},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $description Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343905697},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $va Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343906525},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание заказа\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343918489},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Jgbc\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343919185},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value \r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343922562},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описан\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343923222},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype1|datatype2 $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343924758},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1|datatype2 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343925415},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype1 описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343967405},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343969936},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype    $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343972019},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype      $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343974404},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype          $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343974744},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype        $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343975434},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype    $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343976370},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание           # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343976868},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                     # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343977499},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var string                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343980504},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                              # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343982412},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                             # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343989150},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343991386},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входн\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638343991814},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входных параметров \r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638344043372},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входных параметров фу\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638344045618},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входных параметров фун\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638344047121},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n/**\r\n * ToDo: Указать что нужно позже сделать сделать \r\n * Описание класса/метода\r\n * @var\r\n * @param\r\n * @author Steelmoorg\r\n */\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входных параметров функции\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638344047527},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входных параметров функции\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638344048418},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"docBlock","folderId":"bA_1WKs89","content":[{"label":"Snippet","language":"php","value":"<?php\r\n\r\n /**\r\n  * ToDo: Указать что нужно позже сделать сделать \r\n  * Описание класса/метода\r\n  * @author Steelmoorg\r\n  * @param string $value Описание входных параметров функции\r\n  * @return void\r\n  */"},{"label":"Discription","language":"php","value":"<?php\r\n\r\n// @author Steelmoorg                                       # Имя автора кода.\r\n// @category Zend                                           # Имя категории, в которую объединены несколько пакетов.\r\n// @deprecated 1.7                                          # Дескриптор указывает на то, что код устарел. В качестве значения дескриптора указывается версия, начиная с которой код считается устаревшим.\r\n// @example /path/example.php                               # Указывает путь к файлу, содержащему пример использования кода..\r\n// @final none                                              # Дескриптор отмечает методы или свойства, которые не могут быть перегружены в дочерних классах. Также может быть отмечен класс, который не должен быть наследован.\r\n// @global datatype                                         # Дескриптор для декларации глобальных переменных.\r\n// @ignore none                                             # Сообщает phpDocumentor’у, что данный код не следует включать в лист документации.\r\n// @internal комментарий                                    # Значение дискриптора не будет добавлено в файлы документации.\r\n// @license http://www.example.com/License.txt GPL License  # Добавляет ссылку на лицензию, под которой распространяется код.\r\n// @link http://www.example.com Текст ссылки                # Дает возможность добавить ссылку к любому документируемому коду.\r\n// @method returntype описание                              # Используется для описания магического метода __call().\r\n// @name $globalvariablename                                # Дает возможность сослаться на краткое имя глобальной переменной, объявленной с помощью @global.\r\n// @package Zend_Pdf                                        # Указание имени пакета, в который входит данный программный код (файл).\r\n// @param datatype $paramname описание                      # Дескриптор описывает входные параметры для функций и методов классов.\r\n// @return datatype описание                                # Используется для описания данных, возвращаемых функцией или методом класса.\r\n// @see …                                                   # Дескриптор предлагает обратиться к другому, уже существующему докблоку.\r\n// @since v 0.7                                             # Указывает на версию пакета/класса, с которой комментируемый элемент стал доступен.\r\n// @subpackage Name                                         # Используется для объединения нескольких пакетов в один раздел документации.\r\n// @todo Something                                          # Можно описать будущие возможные изменения кода.\r\n// @throws MyException                                      # Указывает тип исключения, который может быть возвращен участком кода.\r\n// @var datatype                                            # Указывает тип свойства класса.\r\n// @version Version 1.1                                     # Текущая версия реализации документируемого кода."}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1637166839767},"updatedAt":{"$$date":1638347858556},"_id":"ORPuRMypJw5COIj7","folder":{"id":"bA_1WKs89","name":"PHP","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"text","value":""}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638365847756},"_id":"RxOCzkX5b02tFEUe"}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"text","value":"use Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638365847850},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"use Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638365850451},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638365855818},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"Б,\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638365999671},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366001091},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366002223},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366002650},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366003805},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n  \r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366005669},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n    \r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366050617},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n  \r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366052645},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366053734},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366054112},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Untitled snippet","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366054504},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Hf","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366057335},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366096924},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Ра","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366098299},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с ","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366098895},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с H","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366100854},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366103205},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366103740},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блока","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366104626},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366105780},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":"Fragment 1","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366106654},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":"добавления записи в highloadblock","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366113021},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":"Lj","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366124892},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" ","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366129073},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" L","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366130395},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Lj","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366130772},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" ","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366131123},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление ","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366131871},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366134436},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в ","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366135743},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в H","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366136648},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366137449},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366137890},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-,kjr","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366138346},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-,","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366139258},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366140673},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Fragment 2","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366141005},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":" Добавление записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366142534},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"О","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366152748},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"О","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366154372},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновле","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366154677},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление ","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366155906},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление  Добавление записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366156814},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление  Добавлениезаписи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366157789},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление  записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366164388},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366165297},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":null,"value":null},{"label":"Fragment 3","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366166135},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":null,"value":null},{"label":" Добавление записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366174305},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":null,"value":null},{"label":" Удаление записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366176576},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":null,"value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":" Удаление записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366180397},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":" Удаление записи в HL-блок","language":null,"value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366191390},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":" Удаление записи в HL-блок","language":"php","value":null}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366201667},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":" Удаление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366205500},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":" Удаление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n$entity_data_class::Delete(\"77\");  // где 77 -  id удаляемой записи \r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366206898},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
{"name":"Работа с HL-блоками","folderId":"-2irHeXbe","content":[{"label":" Добавление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n   // Массив полей для добавления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::add($data);"},{"label":"Оновление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n\r\n   // Массив полей для обновления\r\n   $data = array(\r\n      \"UF_TYPE\"=>'33',\r\n      \"UF_COUNT\"=>'1',\r\n      \"UF_DATA\"=>date(\"d.m.Y\")\r\n   );\r\n\r\n   $result = $entity_data_class::update(\"77\"], $data); // где 77 -  id обновляемой записи \r\n\r\n"},{"label":" Удаление записи в HL-блок","language":"php","value":"<?\r\n\r\nuse Bitrix\\Main\\Loader; \r\n\r\nLoader::includeModule(\"highloadblock\"); \r\n\r\nuse Bitrix\\Highloadblock as HL; \r\nuse Bitrix\\Main\\Entity;\r\n\r\n$hlbl = 1; // Указываем ID нашего highloadblock блока к которому будет делать запросы.\r\n$hlblock = HL\\HighloadBlockTable::getById($hlbl)->fetch(); \r\n\r\n$entity = HL\\HighloadBlockTable::compileEntity($hlblock); \r\n$entity_data_class = $entity->getDataClass(); \r\n\r\n$entity_data_class::Delete(\"77\");  // где 77 -  id удаляемой записи \r\n"}],"tags":[],"isFavorites":false,"isDeleted":false,"createdAt":{"$$date":1638365847756},"updatedAt":{"$$date":1638366220569},"_id":"RxOCzkX5b02tFEUe","folder":{"id":"-2irHeXbe","name":"Bitrix","open":false,"defaultLanguage":"text","children":[]},"tagsPopulated":[]}
